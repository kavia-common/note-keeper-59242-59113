{"is_source_file": true, "format": "TypeScript", "description": "This file defines interface functions for interacting with a notes API, including fetching, creating, updating, and deleting notes. It includes utility for determining the API base URL and handling responses.", "external_files": ["./types"], "external_methods": [], "published": ["fetchNotes", "fetchNote", "createNote", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "function getApiBase(): string { getApiBase", "description": "Determines the API base URL from environment variables or global window variables, with a fallback to '/api'.", "scope": "", "scopeKind": ""}, {"name": "async function handleResponse<T>(res: Response): Promise<T> { handleResponse", "description": "Handles fetch responses, throws errors for non-OK responses, and parses JSON data.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchNotes(signal?: AbortSignal): Promise<Note[]> { fetchNotes", "description": "Fetches all notes from the API endpoint.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchNote(id: NoteID, signal?: AbortSignal): Promise<Note> { fetchNote", "description": "Fetches a single note by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote( createNote", "description": "Creates a new note with the specified title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote( updateNote", "description": "Updates an existing note specified by ID with new title and/or content.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: NoteID): Promise<void> { deleteNote", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "handleResponse", "fetch", "handleResponse", "fetch", "handleResponse", "fetch", "handleResponse", "fetch", "handleResponse"], "search-terms": ["fetchNotes", "api.ts", "Notes API interface", "Note handling functions", "getApiBase", "handleResponse"], "state": 2, "file_id": 19, "knowledge_revision": 39, "git_revision": "", "ctags": [{"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^export async function createNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^      const data = await res.json();$/", "language": "TypeScript", "kind": "constant", "scope": "handleResponse", "scopeKind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^export async function deleteNote(id: NoteID): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "envBase", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const envBase = import.meta.env.PUBLIC_NOTES_API_BASE as string | undefined;$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBase", "scopeKind": "function"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^    const err: ApiError = { message, status: res.status };$/", "language": "TypeScript", "kind": "constant", "scope": "handleResponse", "scopeKind": "function"}, {"_type": "tag", "name": "fetchNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^export async function fetchNote(id: NoteID, signal?: AbortSignal): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^export async function fetchNotes(signal?: AbortSignal): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getApiBase", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^function getApiBase(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "handleResponse", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^async function handleResponse<T>(res: Response): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(`${getApiBase()}\\/notes\\/${id}`, { method: \"DELETE\" });$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(`${getApiBase()}\\/notes\\/${id}`, { signal });$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNote", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(`${getApiBase()}\\/notes\\/${id}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(`${getApiBase()}\\/notes`, { signal });$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const res = await fetch(`${getApiBase()}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^    const err: ApiError = { message, status: res.status };$/", "language": "TypeScript", "kind": "constant", "scope": "handleResponse", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^export async function updateNote($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "winBase", "path": "/home/kavia/workspace/code-generation/note-keeper-59242-59113/notes_frontend/src/lib/api.ts", "pattern": "/^  const winBase = typeof window !== \"undefined\" ? (window as any).__NOTES_API_BASE__ : undefined/", "language": "TypeScript", "kind": "constant", "scope": "getApiBase", "scopeKind": "function"}], "hash": "e12c6a2d6534595783b45ef42019014f", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/api.ts", "revision_history": [{"39": ""}]}